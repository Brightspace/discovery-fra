<link rel="import" href="../../bower_components/polymer/polymer.html">
<link rel="import" href="../../bower_components/app-route/app-route-converter.html">
<link rel="import" href="../../bower_components/iron-location/iron-query-params.html">
<link rel="import" href="../mixins/ifrau-mixin.html">

<dom-module id="app-location-ifrau">
	<template>
		<iron-query-params
			params-string="{{query}}"
			params-object="{{queryParams}}">
		</iron-query-params>
		<app-route-converter
			path="{{path}}"
			query-params="{{queryParams}}"
			route="{{route}}">
		</app-route-converter>
  </template>

	<script>
		'use strict';

    class AppLocationIfrau extends D2L.Discovery.IfrauMixin(Polymer.Element) {
      static get is() {
        return 'app-location-ifrau';
      }

      static get properties() {
        return {
          pageTitle: String,
          path: {
            type: String,
            notify: true
          },
          queryParams: {
            type: Object,
            notify: true
          },
          query: {
            type: String,
            notify: true
          },
          route: {
            type: Object,
            notify: true
          },
          dwellTime: {
            type: Number,
            value: 500
          },
          _lastChangedAt: {
            type: Number,
          },
        };
      }

      static get observers() {
        return [
          '_routePathChanged(route.path, query)'
        ];
      }
      
      ready() {
        super.ready();
        console.log('app-location-ifrau ready');
        var self = this;
        this.ifrauclient.connect().then((client) => {
          client.onEvent('navigation.statechange', (url) => {
            if (url === 'app/index.html') {
              // Don't update URL bar when we initially hit the /app/index.html
              return;
            }

            self._setPathAndQueryFromUrl.call(self, url);
          });

          return client.getService('navigation', '0.1');
        }).then((nav) => {
          return nav.get();
        }).then(this._setPathAndQueryFromUrl.bind(this));
      }

      connectedCallback() {
        super.connectedCallback();
        console.log('app-location-ifrau connected');
        this._lastChangedAt = window.performance.now();
      }

      _setPathAndQueryFromUrl(url) {
        console.log('app-location-ifrau _setPathAndQueryFromUrl');
				var parser = document.createElement('a');
				parser.href = url;
				this.path = parser.pathname;
				// Not sure if this is a bug in iron-query-params, but it doesn't appear to
				// trim the leading '?', so first property becomes '?foo' rather than 'foo'
				this.query = parser.search.replace('?', '');
			}

			_routePathChanged() {
        console.log('app-location-ifrau _routePathChanged');
        console.log('>> this.route.path:', this.route.path);
				if (!this.route.path || this.route.path === '/app/index.html') {
					return;
				}

				var self = this;
				this.ifrauclient.connect().then((client) => {
					return client.getService('navigation', '0.1');
				}).then(function(nav) {
					// Push new path to URL bar, including query if there is one
					var path = self.route.path;
					if (self.query) {
						path = path + '?' + self.query;
					}

					var now = window.performance.now();
					var shouldReplace = self._lastChangedAt + self.dwellTime > now;
					self._lastChangedAt = now;
          
          console.log('>> shouldReplace:', shouldReplace);
          console.log('>> path:', path);
          console.log('>> self.pageTitle:', self.pageTitle);
					if (shouldReplace) {
						nav.replace(path, self.pageTitle);
					} else {
						nav.push(path, self.pageTitle);
					}
				});
			}
    }


    window.customElements.define(AppLocationIfrau.is, AppLocationIfrau);
	</script>
</dom-module>
